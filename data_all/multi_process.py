import json
import re
def find_answer(text):
    pattterns = [
        r'\s*([A-D])',# 正确数量不增加
        r"^答：\s*([A-D]*)",
        r"答：\s*([A-D]*)",
        r"答案\s*([A-D]*)",
        r"^选([A-D]*)",
        r"选([A-D]*)",
        r"选：([A-D]*)",
        r"故([A-D]*)",
        # r"因此为([A-D]*)",
        r"^选项([A-D]*)",
        r"选项([A-D]*)",
        r"选择([A-D]*)",
        r"是\s*([A-D]*)",
        r"为?([A-D]*)选项",
        r"即?([A-D]*)。",
        r"答案是\s*选?项?\s?([A-D]*)",
        r"答案为\s*选?项?\s?([A-D]*)",
        r"答案应为\s*选?项?\s?([A-D]*)",
        r"答案选\s*选?项?\s?([A-D]*)",
        r"答案是:\s*选?项?\s?([A-D]*)",
        r"答案应该是:\s*选?项?\s?([A-D]*)选?项?",
        r"答案应该是\s*选?项?\s?([A-D]*)选?项?",
        r"答案应该选\s*([A-D]*)",
        r"正确的一项是\s*([A-D]*)",
        r"正确的一项为\s*([A-D]*)",
        r"正确的?选项是\s*([A-D]*)",
        r"正确的?选项为\s*([A-D]*)",
        r"答案为:\s*选?项?\s?([A-D]*)",
        r"答案应为:\s*选?项?\s?([A-D]*)",
        r"答案:\s*选?项?\s?([A-D]*)",
        r"答案是：\s*选?项?\s?([A-D]*)",
        r"答案应该是：\s*选?项?\s?([A-D]*)",
        r"答案为：\s*选?项?\s?([A-D]*)",
        r"答案应为：\s*选?项?\s?([A-D]*)",
        r"答案：\s*选?项?\s?([A-D]*)",
        r"选?项?([A-D]*)是正确的?答案",
        r"选?项?([A-D]*)为正确的?答案",
        r"([A-D]*)选?项?是正确的?答案",
        r"([A-D]*)选?项?为正确的?答案",
        r"最终答案为([A-D]*)",
        r"答案为\s*(\w+)",
        r"^答案：([A-D]*)",
        r"^故选([A-D]*)",
        r"^解答：([A-D]*)",
        r"^是([A-D]*)",
        r"^选项是([A-D]*)",
        r"^选项([A-D]*)",
        r"^故([A-D]*)",
        r"解答： ([A-D]*)"

        r'\s*([A-D])$',# 正确数量不增加
        r"^答：\s*([A-D]*)",
        r"答：\s*([A-D]*)",
        r"答案\s*([A-D]*)",
        r"^选([A-D]*)",
        r"选([A-D]*)",
        r"选：([A-D]*)",
        r"故([A-D]*)",
        # r"因此为([A-D]*)",
        r"^选项([A-D]*)",
        r"选项([A-D]*)",
        r"选择([A-D]*)",
        r"是\s*([A-D]*)",
        r"为?([A-D]*)选项",
        r"即?([A-D]*)。",
        r"答案是\s*选?项?\s?([A-D]*)",
        r"答案为\s*选?项?\s?([A-D]*)",
        r"答案应为\s*选?项?\s?([A-D]*)",
        r"答案选\s*选?项?\s?([A-D]*)",
        r"答案是:\s*选?项?\s?([A-D]*)",
        r"答案应该是:\s*选?项?\s?([A-D]*)选?项?",
        r"答案应该是\s*选?项?\s?([A-D]*)选?项?",
        r"答案应该选\s*([A-D]*)",
        r"正确的一项是\s*([A-D]*)",
        r"正确的一项为\s*([A-D]*)",
        r"正确的?选项是\s*([A-D]*)",
        r"正确的?选项为\s*([A-D]*)",
        r"答案为:\s*选?项?\s?([A-D]*)",
        r"答案应为:\s*选?项?\s?([A-D]*)",
        r"答案:\s*选?项?\s?([A-D]*)",
        r"答案是：\s*选?项?\s?([A-D]*)",
        r"答案应该是：\s*选?项?\s?([A-D]*)",
        r"答案为：\s*选?项?\s?([A-D]*)",
        r"答案应为：\s*选?项?\s?([A-D]*)",
        r"答案：\s*选?项?\s?([A-D]*)",
        r"选?项?([A-D]*)是正确的?答案",
        r"选?项?([A-D]*)为正确的?答案",
        r"([A-D]*)选?项?是正确的?答案",
        r"([A-D]*)选?项?为正确的?答案",
        r"最终答案为([A-D]*)",
        r"答案为\s*(\w+)",
        r"^答案：([A-D]*)",
        r"^故选([A-D]*)",
        r"^解答：([A-D]*)",
        r"^是([A-D]*)",
        r"^选项是([A-D]*)",
        r"^选项([A-D]*)",
        r"^故([A-D]*)",
        r"解答： ([A-D]*)"
        # r"选项\s*[A-D]*"
    ]
    for pattern in pattterns:
        match = re.findall(pattern,text)
        if match:
            answer = match
            return answer
        
    return 'no answer'

print(find_answer(text="  A、BD"))



